{"version":3,"sources":["commands/build/auth.js"],"names":["creds","spawnAndCollectJSONOutputAsync","FASTLANE","validate_apple_credentials","appleId","password","getTeamsAttempt","DEBUG","console","log","action","dump","result","reason","rawDump","Error","teams","length","NO_TEAM_ID","teamId","teamChoices","map","team","i","forEach","choice","prompt","type","name","message","choices","answers","indexOf","validateCredentialsProduceTeamId","process","platform","match","version","username","split","warn","access","WSL_BASH","constants","F_OK","ENABLE_WSL","prepareLocalAuth","program","args","prgm","cmd","race","resolve","reject","setTimeout","timeout_msg","TIMEOUT","jsonContent","WSL_ONLY_PATH","windowsToWSLPath","join","child","spawn","opts","e","stdout","on","d","toString","stderr","push","reply","Buffer","concat","JSON","parse","USER_PERMISSIONS_ERROR","createAppOnPortal","ensureAppIdLocally","produceProvisionProfile","producePushCerts","produceCerts","require","NO_BUNDLE_ID","MULTIPLE_PROFILES","env","EXPO_DEBUG","doesFileProvidedExist","printOut","p12Path","stat","stats","isFile","doFastlaneActionsExist","all","path","doesExist","appStoreAction","metadata","bundleIdentifier","experienceName","app_management","credentials","fetch_new_provisioning_profile","fetch_push_cert","fetch_cert","noSlashes","p","slice","MINUTES","stdio"],"mappings":"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","file":"../../../commands/build/auth.js","sourcesContent":["// Getting an undefined anywhere here probably means a ruby script is throwing an exception\nimport child_process from 'child_process';\nimport slash from 'slash';\nimport spawnAsync from '@expo/spawn-async';\nimport { basename } from 'path';\nimport inquirer from 'inquirer';\nimport fs from 'fs-extra';\nimport { release, userInfo } from 'os';\n\nimport log from '../../log';\n\nconst FASTLANE =\n  process.platform === 'darwin'\n    ? require('@expo/traveling-fastlane-darwin')()\n    : require('@expo/traveling-fastlane-linux')();\n\nconst WSL_BASH = 'C:\\\\Windows\\\\system32\\\\bash.exe';\n\nconst WSL_ONLY_PATH = 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin';\n\nexport const NO_BUNDLE_ID = 'App could not be found for bundle id';\n\nexport const MULTIPLE_PROFILES = 'Multiple profiles found with the name';\n\nexport const DEBUG = process.env.EXPO_DEBUG && process.env.EXPO_DEBUG === 'true';\n\nconst ENABLE_WSL = `\nDoes not seem like WSL enabled on this machine. Download from the Windows app\nstore a distribution of Linux, then in an admin powershell, please run:\n\nEnable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux\n`;\n\nexport const doesFileProvidedExist = async (printOut, p12Path) => {\n  try {\n    const stats = await fs.stat(p12Path);\n    return stats.isFile();\n  } catch (e) {\n    if (printOut) {\n      console.log('\\nFile does not exist.');\n    }\n    return false;\n  }\n};\n\nexport const doFastlaneActionsExist = async () => {\n  return Promise.all(\n    Object.keys(FASTLANE).map(async action => {\n      let path = FASTLANE[action];\n      return { action, path, doesExist: await doesFileProvidedExist(false, path) };\n    })\n  );\n};\n\nfunction appStoreAction(creds, metadata, teamId, action) {\n  const args = [\n    action,\n    creds.appleId,\n    creds.password,\n    teamId,\n    metadata.bundleIdentifier,\n    metadata.experienceName,\n  ];\n  return spawnAndCollectJSONOutputAsync(FASTLANE.app_management, args);\n}\n\nexport function createAppOnPortal(creds, metadata, teamId) {\n  return appStoreAction(creds, metadata, teamId, 'create');\n}\n\nexport function ensureAppIdLocally(creds, metadata, teamId) {\n  return appStoreAction(creds, metadata, teamId, 'verify');\n}\n\nexport function produceProvisionProfile(credentials, { bundleIdentifier }, teamId) {\n  return spawnAndCollectJSONOutputAsync(FASTLANE.fetch_new_provisioning_profile, [\n    credentials.appleId,\n    credentials.password,\n    bundleIdentifier,\n    teamId,\n  ]);\n}\n\nexport function producePushCerts(credentials, { bundleIdentifier }, teamId) {\n  return spawnAndCollectJSONOutputAsync(FASTLANE.fetch_push_cert, [\n    credentials.appleId,\n    credentials.password,\n    bundleIdentifier,\n    teamId,\n  ]);\n}\n\nexport function produceCerts(credentials, teamId) {\n  return spawnAndCollectJSONOutputAsync(FASTLANE.fetch_cert, [\n    credentials.appleId,\n    credentials.password,\n    teamId,\n  ]);\n}\n\nconst NO_TEAM_ID = `You have no team ID associated with your apple account, cannot proceed.\n(Do you have a paid Apple developer Account?)`;\n\nexport async function validateCredentialsProduceTeamId(creds) {\n  const getTeamsAttempt = await spawnAndCollectJSONOutputAsync(\n    FASTLANE.validate_apple_credentials,\n    [creds.appleId, creds.password]\n  );\n  if (DEBUG) {\n    console.log({ action: 'teams attempt retrieval', dump: getTeamsAttempt });\n  }\n  if (getTeamsAttempt.result === 'failure') {\n    const { reason, rawDump } = getTeamsAttempt;\n    throw new Error(`Reason:${reason}, raw:${JSON.stringify(rawDump)}`);\n  }\n  const { teams } = getTeamsAttempt;\n  if (teams.length === 0) {\n    throw new Error(NO_TEAM_ID);\n  }\n  log(`You have ${teams.length} teams`);\n  if (teams.length === 1) {\n    console.log(`Only 1 team associated with your account, using Team ID: ${teams[0].teamId}`);\n    return { teamId: teams[0].teamId };\n  } else {\n    const teamChoices = teams.map(\n      (team, i) => `${i + 1}) ${team['teamId']} \"${team['name']}\" (${team['type']})`\n    );\n    teamChoices.forEach(choice => console.log(choice));\n    const answers = await inquirer.prompt({\n      type: 'list',\n      name: 'choice',\n      message: `Which Team ID to use?`,\n      choices: teamChoices,\n    });\n    return { teamId: teams[teamChoices.indexOf(answers.choice)].teamId };\n  }\n}\n\nconst windowsToWSLPath = p => {\n  const noSlashes = slash(p);\n  return noSlashes.slice(2, noSlashes.length);\n};\nconst MINUTES = 10;\nconst TIMEOUT = 60 * 1000 * MINUTES;\n\nconst timeout_msg = (prgm, args) =>\n  process.platform === 'win32'\n    ? `Took too long (limit is ${MINUTES} minutes) to execute ${prgm} ${args}.\nIs your WSL working? in Powershell try: bash.exe -c 'uname'`\n    : `Took too long (limit is ${MINUTES} minutes) to execute ${prgm} ${args}`;\n\nconst opts = { stdio: ['inherit', 'pipe', 'pipe'] };\n\nexport async function prepareLocalAuth() {\n  if (process.platform === 'win32') {\n    const [version] = release().match(/\\d./);\n    if (version !== '10') {\n      throw new Error('Must be on at least Windows version 10 for WSL support to work');\n    }\n    const { username } = userInfo();\n    if (username && username.split(' ').length !== 1) {\n      log.warn('Your username should not have empty space in it, exp might fail');\n    }\n    // Does bash.exe exist?\n    try {\n      await fs.access(WSL_BASH, fs.constants.F_OK);\n    } catch (e) {\n      log.warn(ENABLE_WSL);\n      throw e;\n    }\n  }\n}\n\nconst USER_PERMISSIONS_ERROR =\n  'You probably do not have user permissions for where exp is installed, consider changing permissions there';\n\nasync function spawnAndCollectJSONOutputAsync(program, args) {\n  let prgm = program;\n  let cmd = args;\n  return Promise.race([\n    new Promise((resolve, reject) => {\n      setTimeout(() => reject(new Error(timeout_msg(prgm, cmd))), TIMEOUT);\n    }),\n    new Promise((resolve, reject) => {\n      const jsonContent = [];\n      try {\n        if (process.platform === 'win32') {\n          prgm = WSL_BASH;\n          cmd = ['-c', `${WSL_ONLY_PATH} /mnt/c${windowsToWSLPath(program)} ${args.join(' ')}`];\n          var child = child_process.spawn(prgm, cmd, opts);\n        } else {\n          var child = child_process.spawn(prgm, cmd, opts);\n        }\n      } catch (e) {\n        return reject(e);\n      }\n      child.stdout.on('data', d => console.log(d.toString()));\n      // This is where we get our replies back from the ruby code\n      child.stderr.on('data', d => jsonContent.push(d));\n      child.stdout.on('end', () => {\n        const reply = Buffer.concat(jsonContent).toString();\n        try {\n          resolve(JSON.parse(reply));\n        } catch (e) {\n          reject({\n            result: 'failure',\n            reason:\n              reply.match(/Bundler::InstallError/) === null\n                ? 'Could not understand JSON reply from Ruby based local auth scripts'\n                : USER_PERMISSIONS_ERROR,\n            rawDump: reply,\n          });\n        }\n      });\n    }),\n  ]);\n}\n"],"sourceRoot":"/Users/mike/Documents/Work/exp/src"}